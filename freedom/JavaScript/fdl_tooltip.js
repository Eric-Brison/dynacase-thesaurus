/**
 *
 * Can show a tooltip over an element
 * Content of tooltip is the title attribute value of the element
 * copyright 2004 Laurent Jouanneau. http://ljouanneau.com/soft/javascript
 * release under LGPL Licence
 * works with dom2 compliance browser, and IE6. perhaps IE5 or IE4.. not Nestcape 4
 *
 * To use it :
 * 1.include this script on your page
 * 2.insert this element somewhere in your page
 *       <div id="tooltip"></div>
 * 3. style it in your CSS stylesheet (set color, background etc..). You must set
 * this two style too :
 *     div#tooltip { position:absolute; visibility:hidden; ... }
 * 4.the end. test it ! :-)
 *
 */


// create the tooltip object
function tooltip(){}

// setup properties of tooltip object
tooltip.id="tooltip";
tooltip.offsetx = 10;
tooltip.offsety = 10;
tooltip.x = 0;
tooltip.y = 0;
tooltip.snow = 0;
tooltip.tooltipElement=null;
tooltip.title_saved='';
tooltip.saveonmouseover=null;



/**
* Open ToolTip. The title attribute of the htmlelement is the text of the tooltip
* Call this method on the mouseover event on your htmlelement
* ex :  <div id="myHtmlElement" onmouseover="tooltip.show(this)"...></div>
*/
tooltip.show = function (event,htmlelement) {
  var x,y,fw,text;
  if (window.event) {
    x = window.event.clientX + document.documentElement.scrollLeft
      + document.body.scrollLeft;
    y = window.event.clientY + document.documentElement.scrollTop +
      + document.body.scrollTop;
  }
  else {
    x = event.clientX + window.scrollX;
    y = event.clientY + window.scrollY;
  }
  fw = window.innerWidth;
  if (! fw) fw = window.document.body.offsetWidth;
  if (fw-x < 200) x=fw-200;

  

  
  // we save text of title attribute to avoid the showing of tooltip generated by browser
  text=htmlelement.getAttribute("title");
  this.title_saved=text;    
  htmlelement.setAttribute("title","");

   
 
  this.tooltipElement = document.getElementById(this.id);  

  document.getElementById(this.id).innerHTML=text;

  //this.moveTo(this.x + this.offsetx , this.y + this.offsety);
  this.moveTo(x + this.offsetx, y + this.offsety);

  this.tooltipElement.style.visibility ="visible";
   
  return false;
}

/**
* hide tooltip
* call this method on the mouseout event of the html element
* ex : <div id="myHtmlElement" ... onmouseout="tooltip.hide(this)"></div>
*/
  tooltip.hide = function (event,htmlelement) {

      htmlelement.setAttribute("title",this.title_saved);
      this.title_saved="";
      if (this.tooltipElement) {
	 this.tooltipElement.style.visibility = "hidden";
      

      }
}
// Move the tooltip element
tooltip.moveTo = function (xL,yL) {

  this.tooltipElement.style.left = xL +"px";
  this.tooltipElement.style.top = yL +"px";
	
   
}
  function tt_over(event) {      
    if (! event) event=window.event;
    var o= (event.target) ? event.target : ((event.srcElement) ? event.srcElement : null);


    //    if (this.tagName) tooltip.show(event,this);
    // else  
tooltip.show(event,o);

  }
  function tt_out(event) {
     
    if (! event) event=window.event;
    var o= (event.target) ? event.target : ((event.srcElement) ? event.srcElement : null);

    //    if (this.tagName) tooltip.hide(event,this);
    //else  
    tooltip.hide(event,o);

   

  }

/**
 * search all anchors with the class 'tooltip'
 */
  function inittooltips() {
    var ta=document.getElementsByTagName("a");
    var dtool=document.createElement("div");
    dtool.id='tooltip';
    document.body.appendChild(dtool);  
    for (var i=0;i<ta.length;i++) {
      if (ta[i].className=='tooltip') {	
	if (ta[i].title != '') {
	  addEvent(ta[i],'mouseover',tt_over);
	  addEvent(ta[i],'mouseout',tt_out);
	}
      }
    }
  }

addEvent(window,'load',inittooltips);
