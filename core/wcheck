#!/usr/bin/php -q
<?php

$pubdir="/home/httpd/what";

include("WHAT/Lib.Common.php");
include("WHAT/wncurses.php");

global $_SERVER;

if ($_SERVER['HTTP_HOST'] != "")     {
  print "<BR><H1>:~(</H1>";
  exit;
}


//---------------------------------------------------
function GetDbVersion($dbid) {
  global $tmachine;

  $tver=array();
  $tmachine=array();
  $rq=pg_exec ($dbid, "select paramv.val, application.name, application.machine from paramv, application  where paramv.name='VERSION' and paramv.appid=application.id");

  if ($rq === false) return GetDbOldVersion($dbid);

  for ($i=0; $i<pg_numrows($rq); $i++) {
    $row= pg_fetch_array($rq,$i);
    $tver[$row["name"]]=$row["val"];
    $tmachine[$row["name"]]=$row["machine"];
  }


  return ($tver);
}


//---------------------------------------------------
function GetDbOldVersion($dbid) {
  print "GetDbOldVersion";
  $tver=array();
  $rq=pg_exec ($dbid, "select param.val, application.name from param, application  where param.name='VERSION' and param.key=application.id");

  for ($i=0; $i<pg_numrows($rq); $i++) {
    $row= pg_fetch_array($rq,$i);
    $tver[$row["name"]]=$row["val"];
    if ($row["name"] == "USERS") {
      $tver["CORE"]   =$row["val"];
      $tver["ACCESS"] =$row["val"];
      $tver["APPMNG"] =$row["val"];
      $tver["AUTHENT"]=$row["val"];
    }
  }


  return ($tver);
}
//---------------------------------------------------
function GetFileVersion($topdir) {

  $tver=array();
  if ($dir = @opendir($topdir)) {
    while (($file = readdir($dir)) !== false) {
      $inifile = $topdir."/$file/${file}_init.php";
      if (@is_file($inifile)) {

	$fini = fopen($inifile,"r");
	while (! feof($fini)) {
	  $line = fgets($fini,256);
	  if (ereg("VERSION.*=>[ \t]*\"[ \t]*([0-9\.\-]+)", $line, $reg)) {
	    if (isset($reg[1])) $tver[$file]=$reg[1];

	  }
	}
	fclose($fini);
	print_r($app_const);
      }
    }  
    closedir($dir);
  }
  return ($tver);
}


//---------------------------------------------------

$dbaccess=getDbAccess();
$dbank=getDbName($dbaccess);
ncurses_winit("WHAT Checking");


ncurses_getmaxyx(&$fullscreen, $lines, $columns);

$IP=chop(`hostname -i`);
ncurses_color_set(6);
ncurses_mvaddstr(2,5,sprintf(_("Database: %s"), $dbaccess));
ncurses_refresh();



$dbid=@pg_connect($dbaccess);

$wsh=array(); // application update
$migr=array();// migration
$post=array();// post install 
$pre=array(); // pre install 
$dump=array();
array_shift($argv);
if (! $dbid) {
  ncurses_mvaddstr(4,5, _("cannot access to default database [$dbaccess]"));
  $post[] = "$pubdir/CORE/CORE_post  I";
} else {
  ncurses_mvaddstr(4,5,  _("access to default database : granted"));
  
  
  $tvdb= GetDbVersion($dbid);
  $tvfile=GetFileVersion("$pubdir");
  
  pg_close($dbid);
  $tapp = array_unique(array_merge(array_keys($tvdb), array_keys($tvfile)));
  
  
  $line[]= "+++++++++++++++++++++++++++++++++++++++++++++++";
  $line[]= sprintf("|%12s|%10s|%10s|%10s|",
		_("application"),
		_("db "),
		_("file "),
		" N I U D");
  $line[]= "+++++++++++++++++++++++++++++++++++++++++++++++";
  while (list($k,$v) = each ($tapp)) {
    if (($tmachine[$v] != "") && (gethostbyname($tmachine[$v]) != gethostbyname($HOSTNAME)))
      $chk[$v]="?";
    else if ($tvdb[$v] == $tvfile[$v]) {
      $chk[$v]="";
    } else if ($tvdb[$v] == "" ) {
      $chk[$v]="I";
    } else if ( $tvfile[$v] == "") {
      $chk[$v]="D";    
    } else if ($tvdb[$v] > $tvfile[$v]) {
      $chk[$v]="R";    
    } else {
      $chk[$v]="U";    
    }
    $line[]= sprintf("|%12s|%10s|%10s|%10s|%s",
		  $v,
		  $tvdb[$v],
		  $tvfile[$v],
		  $chk[$v],
		  $tmachine[$v]);
  
  }

  ncurses_list($line);
  
  
  reset($chk);
  while (list($k,$v) = each ($chk)) {
    switch ($v) {
    case "I":
      $wsh[] = "$pubdir/wsh.php  --api=appadmin --method=init --appname=$k";
    $wsh[] = "$pubdir/wsh.php  --api=appadmin --method=update --appname=$k";
    break;
    case "U":
      $wsh[] = "$pubdir/wsh.php  --api=appadmin --method=update --appname=$k";
    break;
    case "D":
      $wsh[] = "#$pubdir/wsh.php  --api=appadmin --method=delete --appname=$k";
    break;
    case "R":
      $wsh[] = "#rpm -Uvh $k-".$tvdb[$k];
    break;

    }

    // search POST install
    if (($v != "") && (is_file("$pubdir/$k/{$k}_post"))) {
      if ($v == "I") {
	$pre[] = "$pubdir/$k/{$k}_post  $v";
	$post[] = "$pubdir/$k/{$k}_post  U";
      } else {
	if (($v != "R") && ($v != "?")) {
	  if ($v == "D") $post[] = "#$pubdir/$k/{$k}_post  $v";
	  else $post[] = "$pubdir/$k/{$k}_post  $v";
	}
      }
    }
    

    // search Migration file
    if ($dir = @opendir("$pubdir/$k")) {
      while (($file = readdir($dir)) !== false) {
	if (ereg("{$k}_migr_([0-9\.]+)$", $file, $reg)) {

	  if (($tvdb[$k] != "") && ($tvdb[$k] < $reg[1]))
	    $migr[]="$pubdir/$k/$file";
	}
      }
    }      
  }
  
}

if ($dbid) {
  $dump[] = "su - postgres -c 'pg_dumpall -D > /tmp/".uniqid("whatdb")."'";
  $dump[] = "/etc/rc.d/init.d/httpd stop";
  $dump[] = "$pubdir/whattext";
}

$actions = array_merge($dump,
		       array_merge($pre,
				   array_merge($migr,
					       array_merge($wsh, 
							   $post))));
if ($dbid) {
  if ($dbank != "anakeen") $actions[] = "echo \"update paramv set val= str_replace(val,'dbname=anakeen','dbname=$dbank') where val ~ 'dbname'\" | psql $dbank anakeen";
  $actions[] = "$pubdir/wstart";
  $actions[] = "/etc/rc.d/init.d/httpd start";
}


ncurses_execute($actions);


ncurses_mvaddstr($lines-2, 4, _("Finished. Detail log in /tmp/whatchk.log"));
$pressed = ncurses_getch();// wait for a user keypress
ncurses_end();

?>
